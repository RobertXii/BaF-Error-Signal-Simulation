(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    233093,       5133]
NotebookOptionsPosition[    229694,       5073]
NotebookOutlinePosition[    230094,       5089]
CellTagsIndexPosition[    230051,       5086]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Taylor", " ", "series", " ", "expansion", " ", "of", " ", 
     RowBox[{"Sin", "[", "x", "]"}], " ", "about", " ", "x"}], " ", "=", " ", 
    
    RowBox[{"0", " ", "up", " ", "to", " ", "order", " ", "5"}]}], " ", 
   "*)"}], "\n", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", "9"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9491887736567163`*^9, 3.949188777153057*^9}, {
  3.9491888130841627`*^9, 3.949188813611765*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"64f4e67e-d180-4f13-b0bf-903e3c9ffd3e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "-", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "-", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "10"],
    SeriesData[$CellContext`x, 0, {}, 1, 10, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6], 0, 
    Rational[1, 120], 0, 
    Rational[-1, 5040], 0, 
    Rational[1, 362880]}, 1, 10, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.949188795350354*^9, 3.949188815428039*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"ad16864c-adec-4920-9dea-8552a7b0e1df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Normal", "[", 
     InterpretationBox[
      RowBox[{"x", "-", 
       FractionBox[
        SuperscriptBox["x", "3"], "6"], "+", 
       FractionBox[
        SuperscriptBox["x", "5"], "120"], "-", 
       FractionBox[
        SuperscriptBox["x", "7"], "5040"], "+", 
       FractionBox[
        SuperscriptBox["x", "9"], "362880"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "x", "]"}], "10"],
        SeriesData[$CellContext`x, 0, {}, 1, 10, 1],
        Editable->False]}],
      SeriesData[$CellContext`x, 0, {1, 0, 
        Rational[-1, 6], 0, 
        Rational[1, 120], 0, 
        Rational[-1, 5040], 0, 
        Rational[1, 362880]}, 1, 10, 1],
      Editable->False], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.7846"}], ",", "5.7846"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.949188877982965*^9, 3.94918888711868*^9}},
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"c9373f43-ddc0-4270-bdbb-1505619c352a"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVl3k8lN8Xx21J1pmxRnbKniSU5T5FZEkismXp26KSUFRIQpJKsi+RRIuk
CNnvgxIl2QlZx0OWeexmrL/n98/M6/06dznnc865z73SZ69Zn2dhYmKqJ37+
/5/snX7+3jUhVO0Xh+5w2nZ0/1Ht69RDQijTPdeT19LZ0As2JnyLWkLohPs7
gc4LbGiq++n3rPuFUAUfkdBYdTaUKfjmqIyyEKo3GRxK+caKNpd8sXEXE0KH
9C8cF51nQS8r6GgOrAmibwUMX1OdmNEsroNL3ZWCaIvpIAvatQ67dpo+Gy8V
RGfVzS7V3lmHOxQcVFeKBNFPtxLb7OXXobfR7fNCHwTRhmOB0Qb+a9DgTlnn
qXRBdCKTl6tHYhX20g6WtN4RRNG6d4EpUSuQ0nbo5k8DQXSo9Ziewfd5WPju
JCauS6yf0+5LDp+HNvc8bL21BVF7R7Psk4fnYbx64n5BdUFUHdFpF6qag4JP
53AXaUGUQ3p3RE7ZLBSxeOsxz0rM/xyDwMczUKJe0HFnowB6q5esFWmLwep0
lcYr3wRQD8oa5jsxBl39DHWqawRQOrajTjhoDGbK+Qj9Vy6AlnKynn6cQ4XS
YU1tee8F0E/XTr7bzjwK5ZAwcyRaAPV2/KHL/HkQKpbP6l20EUBj/PMQDsEO
+PWFuVzTCcL+o33Q/1I7dLv/mmufhQDKBA9dF4ZtMNnKuXfVSAANcWLOnLja
CjnGv9+M1hJAM7enax79/Ati/C8Ki3cKoG7koDKvljoYymCkiAoRdsvp7/sz
aqHE4Kl7dykE/yz8tNerBtrlclqZcgmgSH5ufKhiNfyG+M/0r/OjTKdP9DPT
i2D21eMKbEMER1Av3OZ8BBGbt3yX+gkuzXiI8t+A/TqsK796CJYaGn12+grg
Zyv7ltRKsNjbhe8740Foqtx/ynX8aIiI8incMRe4f19Lt37NjyKx6k8UqiuB
hHQu/0tPftTNXuyi4/0m0JZeV/XFg5g/h8tKXv4FHoj+vdh8jpjvcLOtxaIZ
zPKTKtec+dGYR1H/WNhbQC27/zm74/zop9XvaUxlreDC9OFiLjV+dKL1gbgR
3gFELzm5yijxoxyFZXZ5JzvB77EbOw7u5kePlRW2SX7uBDqDb85ckOBHS79W
PFC93gU423jYa3j5UY/YZzrsE90g/8sfO3+cgsbkfmwvy+kFZzUXmJ5MUdDI
9Czfi4xeIFzA/f7VOMFeqhf3W/SBkFyw1TJIQZNznvxVwvuAdXrOG+UWYn4q
DPmi9Bcsh/rQhz4R42N2FxvcHgS5W1FZK3kUVKEa27KDg8A1KNuC9x0FFRmo
f3aCZQg0+HVn6r6koJ5p75+5Gw+BVA9908RnFLRo9XZgReMQ0LfckWruS0Ez
UwPvllYNA5d4ReEcLwoafmR4MalnGIT0msZvXqagi2khUHZhGNReiIou+I+C
7kp6SD28ZwQcu8sVJmxLQWdlXxi+ejQCrD/xeI5qU1C92/SbJ46OghvLqv/0
NAn/DJcUZJxGQYKe5YVEdQpqIc958I33KOhpiHYzVaSgpd83JhpTR8GZYT7b
j6IUtCWf8ixwahR4UCgGgRtkVFPWYnggmAqi7DUqOhhkNMTegJMlhgreZ1jr
qC2TUaO4t0p/M6mAphSnMUwjo0Vcge8qa6jguqHAHpMhMprLOjOjyDQG4h9q
Zmf2k1GlMVM5Ib4xUPL7lPRqDxmN92BfqRQfA3SnBLEPrWR09d2nSt1DYyD4
hhCJv46MZkPBGnbvMZBZrvXEE5JRFxevzpagMVDDdJqzvoKMTjwLp9g/HANs
T5LYbheR0ZLvZOMXL8fAwxwRxkAOGc36mqyz8/cYyJ3S8dfJIqPq2g66nX/G
QNM+h4VnGWS09MKfPivqGOCtTpkxSiKjPw5OKkbSCX+7REdyI8moUFrbyS1x
DDR/ZkiXhJPRTKc079t7MMDxrMe9JoSMIheKa3LVMRBknjjcfYvQa/eHG5pH
MFCi4Cc9eoOM5mlYxz4xw8DstlPuNG8y2v+jx+GFNQbOoeRhtktkdHempgPN
HQMZ6bNSpPNkdFnK2FTlEgZ6An67ibmT0Qzks42cNwYsDjwZ2udARo2P2Mka
3cFABMVTSt+WjKow26V7hmEAxc3cjp0ko1ppxmlWDzGgmcsx5GJKRhtqpx9Y
xGPA68G45OWjZBTDyArnUzDw9ly9q99hMjr5iOPjoQwMjBzOeRGiT0YF9oXe
+JWFgV2S4YOPDhL+lzf8Fn+DAbv1s5JJB8joJ0UorPIeAzF/Drtm7SPstiNZ
9HwMsMVvDZQqklG54je9v4oxYOAzIPFVnoy2KJlrdJdi4JZllctvaTJKMpeU
zazAQKHy84xecTKqUJ7HrFiNgWmOwIGxnWQ0UVlUxhfFwG7MQWJOkIzu4lft
CazFgFudjss6mYxesDa7afwVA6mZwhnbeYn6+udv3fYNAx13lv9SOIn1su0r
Jb9jgNepU1yC/f/519q+twEDx3SKziiykFHugtVwpkYMhArGpWtuktAL6eoP
4gmunPf5C1ZJaJ4mh+sUwcu/rcTNl0mo3WHbM9t+YED9w94zdvMktMg2pm2E
sF+O4k13p5FQXp9u3nCCsy/O9HtOktBdr2nu/4j9Boyadt3CSKg3RMT4CRaR
ee8cNkJC344MPmQm/LPeevg8eoCEHtofsV5E+P+436M/pZeEYtcTa1SJ+OrL
THbldJHQG2927fEk4mdK2u38qY2ERnxqDvAm9Dl0Y9vzimYSGoRzc+oS+t04
Se2r/0FCRYZHpJsIffPV6sTa6kno4/LtfHJlGJjgynL6W0tCLdkHxQ1LMCDz
LyRtopqEruvdTlX8jAHnete+hXIS6uEe39L9EQOJrwzEtkpIqGPycy7LPAy0
hIg7cX4moQNoXuLjtxgw0u3rlXpPQpujq77/l4mBYJFyUZU3JPTY0FmWjTQM
lC4lO2q/IqEaOY4lrkkYUPlk13s8jdBzTOFT6BMMCMq3/Ql4REJD730cNb6J
ATPS0rPkByRU3c3ti5UPBkLWhM1Kwkhor2+hksIVDEy2nimfCyShJu2eG4gL
Ue/B/1I9PElo09LvTGmi35YvcdtEeJBQ/2+sNS8OYUDZdi9X9jkSOhlyNX5G
g4hH2S9w0JmEJk78cGDIYMCzh8nZ7jgJzb1Gut7DhIGsOlmBG6YklFNU0rBv
ZQx05xs3PTtKQqW86xs/0sbAkfuP9X7pk9APrksrzX1jQERDRNxIjYTq5Bwt
mf48Br4+2juwj4/Qa4/tTJ/TGFj1t048wUXofUXaVthqDOw962d5dTsJPa3q
eFzBaAxo+vjfObnFh2ovdfz9qTwGhn48MQBDfKjmueRVSQYV6ARXoqJZfKjW
TmvbvY+pYJy681urPB+ayl01djthFKhYXu2LleBD88MrYpfvjwLvL+icjTAf
yq97JPCU/yhYfXhRoouDD9WIO/ahyG4UcO8tvtk7xYuWHhqy5hIaBRq3rZRG
C3hR5TcSytpPR0Awz4Oni/q8aISw9+6PnsNAQGvRQdiOBw0q+DE4U/YXRP36
uqRryYM+yI6bc4j6C5jOJzxzM+ZBpS+xWCU4/gXTcVqN77R40AOq4lcDV/vB
17lbOnrCPChn7Mx1Pp1+cOPDhpB7Dze6Kwp3fJvbCzrktnfkOnKjD/Xn+yS9
u0ECv6ilgSsXmvEghpT0tAVEvMn+1vxwB5p41zblY1kO2H9QyzWtajs68uX0
gNWreqh5mt/e9Mc29AtN47gwqRdGuLCVMNdtQwvLssCsUS/sOb/EX16xDf1E
t80qut0LA290/1b6sA2dpCWsbY70wtpnaSbcMdtQ8SLYE1/UB62aZLV/225D
I6Cd93Obv9DzsKaQ7TAbun6qQnYGDMEcZdsONzoruuPju1ufDUehgnvdl6BZ
VvSTmHXnL+dRmJe4Ly15ghXl3v8jr9NvFBYy855t6SHu2WnWFz68GYXV3fU4
KGNFK17mgABOKuwK0+GSDGBFz+kYF15vokKOfrEjf9dYUIdRbzfdwxh8RI6S
ZyywoLjqk3OdpzHIa0LnEJxmQVm9NQYdvDAoUNjx26KfBX0u//ivdBoGpSKf
nKmsZEFNTNofvl/A4EHNrVtpd4h7vflF09jMcXj58chHhy1mlKe69bnwvwlI
/dsTlrrCjFZbqMoFrE9Al72/T/fhzGgk11nnb3z/oHVbxZbzEDP6B9FKENT6
Bw+JJJxwq2FGMY2fu9Pu/YOc2Sb4hTBmNOx55A5lgUmYW5GndmM7M9oeJ1tG
3T0F5XhesRRvMaEJm4VautpTMMMlpWtphQmdkO48fMtkCsYyRwTfnCDsK621
ORenYICJa3NAIxN6pU+prun1FDRrJ3vde8SE5rD+fa8vNQ2nJv0/RPMxoenL
jxpMtqahwe+APbYcTCh3Ynbsda4ZGPs5+KUYMxOKXtAreSA8A2/QuZVPjm3B
5Gtrwx57ZyBFTGUt/P0W1It9UsrjMgNPuF1Om9begkV+Opx/SmbgsoLv09uK
W/Dn9dfj92tmYMbc7TB2MWJ+wsQD0aYZSAt9eEVqcxMe1d6cWR2agY9z3uqe
+roJ5/S83ZJ20GDDJNZXYbUJu+X3vtS2o0Hvz7Tfx44Qdv6z1c6uNCgctFzX
uX8THitdFLvkQYMXeNjzcKFNGDt6MUA7gAbZ1OWDZP9uQHT8OP3dcxpE/P7b
9ejSBrxpK9I72E+DE/pXSCJOG1Bs8uY7PyoNPmW/zpZjsQGFHCzN56docCAp
dLp67wZc+14x82KVBoPKX1bOL61DX9UP25qEcFi2NejsGLoOExL3PDhrhsOv
ciNO+b7rMPJAZNyoFQ6bTamOLP+tQ63XlsnGp3E4Ejdhn2u4Dr/jTr6F/+GQ
U2Hu1CrbOryUyFIrFYhDgeMLNpZLa7DNwWryUwgOJXyXrLPG1mATltwvE4HD
/ZUMK7P6NSh6icSZF4NDZyuW46kP1uCJO5Vr1tk4vODHZkG7uQbT5LWx2bc4
9E5lNz/isQYjeeOue3/A4X0qp+nksTW4veDpeYESHMbs4DlmcHANmvr9qNEp
x2GqGp9JrOIazEsQ/WRQjcP8W/xHD3Guwe/FvvvxbzgsTRc0il5dhWa6TDUp
jTisrRU2HJlchXWq+a3yv3DYxb3rcNTPVZj/rNxrpB2HW5ly+r2PVyEpbr/B
zCARb/1uPbU7qzDiRnzUqxEi3ikF3dCrq7D2xOfDumM4VDigelDJchUOfFbC
eCdxqOG4VyfYYBUmrDc1m03jUO/uPu02tVWYXoOKeNBwaNV44EAA3yr8fsmv
wXgeh440bc3mLQY0jPZU4ljE4Tn+Q/tlZhlw9rM0lruEQy8dPQ3/IQb8O81g
qK3g8PYZg30/WhjQY+jmuXg6DsNDEXWJGgbc/Kkr18fAYfSbI3t9CxgwI4xV
h3UNh8lNRmr1Lxnwmm9uBvc6DrPmjFVFYxlQJk3x9ArBeUKmKl6hDHgwOcmt
bgOHJbrmyrW+DHjkuUK59yYOUbfjSkL/MeCUj9p/WwT/vH9C8bINA/IEiThd
2yL0yz2pUG3IgCHF11+iBA/9ttlD0WTA9U+TBxYInly03X1BjgGdmmQeszLN
wsWd9vLlAgzIrnb52Dph3zRwlOPdxoAjDU71bQRznHOWPbtEh+C0bmwUwZSH
LjIlY3R4ytkkT5bgXflu0pxddNiN9wlkEP7sbj8r5VJPh5xVvk0Mwn91+jnJ
whI6LGF+1a5F8CHxixLsb+iQ94m0si0R79Ejl8Qdk+jwWjXaforQh+VJhEdZ
JB16yzONmK4S8Xa/+iwSQIc3fTq05Ag9g2VqNm9eocMX/6m1jxL6610dMO12
JtZXECyNXMbh6pe1eC1LOuSyf41RiHx9Ydk5lADoUGxe0C10gaiHZBv/UzJ0
qO3VokOexeHsiHfNZ346/Gy9kKpO1EO+ajQ3/zY6rH6VffwAUS+KdQ1ZreMr
MLXZ/j1tHIcYDzaj/mcFWpZiDq+Iesu2Zz0Y82MFlintdNMfxaEUTf+35YcV
6FJ+M1B6AIcDOk6i+Rkr0LhiOP5KHw6fh906zxOzAndxePKm9eBQeOfntZ++
K9CHaq2c24ZDXiMFBVOdFXhF95zNQ6JfmqKPXn+ruAIl/qoVbdbg8OGfs9Xb
xVZgtDQS5UD0F9u19FP1G8uwttE7CxL9uJZCuWdYtwxbg4L/Hn9N9Bt1b1NW
0TLctLQ7gr/Eof/e48Isr5fh92Qlbf90HM5/ffABjVyGoK1hUDMehxP4+h99
y2VYeKUo1Y84P14fEpVPB8tQ+PyHaUPifDl3X9t7XX0ZkoRGaCt+OBwU9WWv
4F+GBZE1guQrRP0dHdfQ+bMEcy/c8eI4hcP4GLbgpB9L8OD1gVo2Sxxa90k3
LlcswZJivRnMBIe/vJ1dizOWoPYD3x5nXeL8S2t9pHFuCf7sF07nk8ZhwVwF
VQVfhLIhIY0J4zTYltx+yGZwES5bdt84PkiD82Aq5vbvRQiG3TqwLhrUiBbV
r/+4CE+XibdWf6PBIqXbCa7ei/BqivZHtiwaLPlPyzh2bgEeudXRjJ+iwS5O
y+elwwsQvijurTejweWC8/MDrQtQr8BPJQShQW2mhAzlwgUYvcj8I0WZBkuf
Lyx/9V2Af+8V815mosGKzk9vVhbmIcfnDYXI7BnYH9SwIU6dh+fR2UeRyTNw
XXbIxqhjHs5xZY5eeTwD9Xz5mJ4VzcOD13oy+67PwGpeL3slv3lou3Dltdvh
GYiaKO84szwHLVLreri6p+G3spzLtfRZOJVbf8VoZgp2JP96qfFvFnZ8rNi7
bWAKjtxc6sn6Mwt9DiNJ75un4OaBoyZh5bNwuEDu0buPU1CrkCprFDQLTTRY
Xl3xnoJWtiblj4i+lb1zoFFwZhIKaRu+iOWhQTS17rl3+z/4cvXQpUzFSRgX
2yTAaj8O5dhqriVxTxL6PrsibjQO3/KY+Efj/+CRl22pcurjMF/KJiyo+B/8
Q0n7ytg+DiuNr6TbH/4H8/TvC9aUYLArNq2V5DABxaNC3NtIGORWXj94LxKD
3/8W/XfrCxXedKriPDs+AvmeNj383jYM9fr6rK3JXTA6FVZyZnXCPU1RHwqD
quAletA5Ns8qKCse8NFVrhJUSRkcGxSsBKsudZEnc7tAnHiS/o99XSDp8OH7
kpkjAL479NozaRiIbrcyq4IjgOr8WPhXwTDIaHLhcxocAczjPIa7moZB9umg
lESJUXCHc8U9gmkEfLr65QNP+ig4ERqwGOExAn6kqHatpVDBG0FOS9kDo2B9
bueenjji3bn/eIwYSgV3vyhM+xHvtMaxC30yPVTAcke7gL8dA9J9cb8EZ6mA
g8NW9wRlHCAepabVkmNAUCLmRH3MONhnHi4sHDwG1MzYbxU9mQBGYsmb7VrE
ezprviHmwSS4Pn1sZiBpHHDQh36mvp4EZfl+yz/zxsHH47+bs79NAtF8l7Ks
mnGwSX/fUco6BXYP8EjwTI2DtBPnh4buTgEPsqhhu94E6FrvXlG/NQ0Ge/IN
BfongMXpqt2tHjSgZWDVPs4xCRbz3iv2PaAB7TxYOi46CdJYUlXGXtNAjPwL
3t8qk2Dyg78Gg0oDh4TPN9hYTYIHbOoG0u44gOoyWfsTJ8GwfWtuqcosuG0x
/d5AfArsYjeq5ZCfA52z7piAyDTQ48q8Gbp/DtS7sNePyU8DZ9K6yvrhOcCg
Zqa92D8N0kWLknCXOVDY0bf2y3IaSOyVu9qVPAce0iIcBcKngaQ9m0g29zw4
Pi4lZTA5DZAzbr/ExeaB2Jsio5TlaeB2tjI0SXEeHCP5FPWzzIBMzxszUcbz
ADpZH98lNgOk7lFrfULmQeGOu1Z3zGaATO7Xq2BxHjyNYtKtzp4BRz5KyZax
LIA1lyeRKR9nwNmioB4N8gI4Izbw0Ll8Bryq1jTcrbYApD/lhKf8ngFy7dki
PB4LoLVY9hKNPgPk18PrevsWQCFum7VuTAPGzMO3Tk0uAPcANe0TVjRwgV1f
rZm+AKx/mK9HOtDAa9JSco3gIlgW0mEUXKGB3fLnvd6eWAT57OF4TzQNKFge
3elftwh2mVzOuNFCA9jy6zqF9kXwrqLd+28PDbx6weHVN7II7sRvPlMYpgGJ
uZ+1CMsSUM9pyjw/RwMC8daeXIeXgG3RhnAACQdtekVC1VZL4GrqmQeLwjh4
OiZY4+22BO7+aeU4KYkDTu0/gl13l0DAvzr5T6o4YO51hZnVS0C8r5SD3RQH
1aE1l2yal0CQcf+xmBM4CFKWFWAfWAJ9wenn121xQA/CPK5sLAFBrfO7As7i
gCZ5laKltwxub3P6wxmAg7yG5soJ82VwuHv+9Ku7OLjko34xzWkZ9NcuhYvf
xwG1dqGCKXAZLFlYdpY8xUHv+YDzP8uWgfiScl3QKxwk8/bzBTcug/qGfQoy
b3Fg+0W/XP3PMmh6AAXe5eGghYOZL5G+DLx27L3uVIyD6IKzZcc4VsByUGl/
RBkOzB2//rcmvAJ8jHdWxVXhoP79g1I37RXwx2Sx7eQ3HISf+neW32QFXJtl
ZmZtxMHhDTOeersVsLeHJymhCQeVlrxnlf1XAGR+POPSjoPPc/Fcy0Ur4KVl
1NS9QRx4py4Xv/26AoqGZJkMRnCgZmjv5tSxAhS64871UXGQGy9WjC6sgOIY
Qf7yfzjw0L/jep2VDo7WhdivTeFAHhvYsZufDsIN/KjiNBxkame5PNKggy7z
he/s8zhwGWLdYXCEDvyK68R+LeBA7OH5z7Mn6cBa7H3+jSUc9Oz7fuaVOx2c
VBG+u7GMg8ReBQ47HzoIPhH36CIdB6fCogo57tHBck5DWyEDB2SVaeeKGDoo
5Q62GVzFQXPH8e1emXRgIZHMPbOGg8d3PhZIfaKDK5o7N/rWifWYlvkaqulg
qjUYebFB+Bem53XtFx1Qe89+NNkk4mMPaxLqpwOwV9+0k+Cih41K1ZN0YGj6
nOfYFlE/3KSH5xl0YGcgv/6C4IanduPcHAxQCOME/hLcRkk/WiTEAJxi5XZb
BPcnjL5ykmeA6HTEnbifAkxEiYVVkwF2v504TdxfwWyat1vuEQa4FMku/I3g
VYkv1SdPMoBP5namIILZsjZ2MVwZ4KLNXn4RgnnljQIzvRjg5KtuqxTCP5G3
UX9M7jCA5j6fsi0iHhnlVm38EQMo6YcdNydYNV84MTGVAbxev+cJIuLX2eey
qP+OAcynMlafEfocKcq2HvvCAFsKCoJPCP0stKc+Pa5ngEdiii5XCX3tyvfx
aXYyQKB4apcGob+b/q2rfaMMELsn6u5fIj+X0eqfofMM4NYi4XiVyF9wvXlk
K98qqLms/06PyHekaSx2S2IV7E0NkwqaxUFsU4+RlOoq+D2CNWcS9fG67Tzz
NbNVIDjh150yiYNPtnmuQg6rwL6McsBrAgflPfNVVRdXgdHP/JY9GJHfgbsB
3PdXwbg7bDQbJurFvb7nc9wqeF7soFw0gIMRKre2U9YqyBszaGfpx8HyZMrC
O7gK7v9W3TrRhQMmr6GTJ5tXwc8ZcqQlUf+cc7s/0ftXQWT+kptGCw4kVj57
mqyugqBVD55con8UAlZ/0DjWgLH1A0y/HgcaG4hiovAasBmpFf1SiwNj1uYx
quYasBV6k+lQgYNrfBMuodfWQKbZ60DX9zgIiFWrUgxeA3vk4yIk3hD9Kegn
1vp4DQTyk7fXZRHngRhLj2TuGhhQz7lZmYIDdM+uk1XUNWByzDHcJwIHJMTK
kO6wDnaxDmyOO+JA5VEEauuxDnolLtpJEOfVsa5K/c/+6yCz8cI1XeI8u+ep
qOMVtw6OfOJnKBriYD6ZRZXatA6yd7xd7lHEQftckVAL2ABlH1QOhc3TwKze
VJyq5QZoKjcSUpiiAe5IafIj5w0Q6XOUs2iUBowkormMb2+Ak3c8rO910ECR
2UWmysIN0Mp2hzJfRAOJr3ZOvpHfBGbvc3k1fGigkHbi4jbNTXCffuOaOfFd
bj4YQT17ZBOIZy9ZW7jSwPaW+QFx101gA59CtuM0cGv9Z3tc8iYQqathPrmH
Bhxtg6vucm0B0fUnTC7dM0B8+2jM6bktUKl8KT9cfgZMBTxlvsnEhByREv2Z
IjIDjvl+OHSEgwk5typjG8c1A1jc/+X1CDMhgvcfj+6fmwZ+Bu7PtmkzIdMX
mk+oVEwDJ4aVo6sfE6LYokzbZjYN9lxTn6bMMyFzdgWzVTZTIPyCpfwAgwk5
y3acJ9BwCgyd8XR5x8yMaNhoO0vsnwKpFm9bAJkZ0ccutAhTpgCvklSxpzoz
cu3v7/buZuL+QeULrvdiRvoPzr9ONZwEqCPOFzDFjEhzqGS/Ev0HDOFWFpxn
RqSuJpyO5/gH6mVJWttWmZE77Zi/9/IEaJpWd47hYEE2q1q1plonQE+w79vX
8iyItlWh1/SDCTCXtYS0u7Ig4lNqz5Rnx4HM1JqPSgcLclAs7i9vIQbCAjk6
BipZkc0hTl/NrVHQUZA2jH5lRS7i2TfSsFGwe0INz2piRUjBf67hv0bBj1O2
nBf7WRFTcKjI5fkoIKllIfgaK9LAU6R1RmcUZAzpftg6xIZgLey3Zj1HQPnR
axFSZWzIq4zTs7sbh8AcX5fO2eJtyInuL2IZb3oBPmMgGvR4O5L23rHLJb0R
7GvO/OPguAOhD3HlHDkbDyVlvhy0O8GFpFMFlOV3tcD4CcX72XZciI68aonO
yRbI+fF5y/wZLqT2pL3FgYgWuKwbevGpJxcylPMlegJvgc22xxMaHnIhAz8n
hNRrW2Hww9HZQ1+5EPIAosZxth0OzPK9lTzIjeDfVNc3HnfBU19CF64i3Eh8
z4jRx+ou+OPOkkGlCTcSuvCX7fBsFyzh7Ou0t+NGbngW/Waz6YbRcq9ZY69z
Iz7jn5u2CfdAA3s9V7Z8bmTXentzfvIfmA49hP7J8CBFv399zwzphyOnXfrb
lXgQo7XA7LSCfrh71iarWoMHedSTUnVhpB9+kgJq8Ud4kBTdNjlPw7+w9p6g
MTjLgyhI7dNRZB2AE4a1fgkveZCYihQt4duDUKNBrPOwFC8S6/JzdpvEMPR3
I6epKPAiN0nGLXv2D8MKOru7sDovMqGr9Ez52DA0Upyfnga8SKZcNdbtMwxP
RzWwJbvyInJWk/LVdcMwyMJPk5bBiyjsG8iIdR+B31ua41LF+ZB7KdfzhsJG
ocBxvUtu8nxIUnCeYGT8KDzb+M5gtyofgjvnjnPljMLNmvB/BXp8yESQzMyb
b6NQ8/Mh0OjEh5Cef4xQ3kaFWQmvJ1dS+JDZ/luv1e9Q4SxZAK16yYd8Hdze
Hf6ICg2i7yWEvSPm972mF6RQ4Z8IZ4SvjA+5WlmllFhMhaRblMTdPXxIq7kM
c8gUFQJVmKnERULs2oMfvD4xBi9M+T3i4SMhFUoNGV5OY/DxOxX/WQoJkbRC
N7kujsFe+VTzElESclT88ptvd8agv4Tf8mElYvzeA8uq78Zger/ysJwaCSmf
Y/mY8nkMfk0d+bldg4QcNN/T0FM1BinCVi9/HSTYg0O2pXUMfuBTtnAwJSHz
F069er4yBjt+DWvpHSchup2xkc+ZMLj6KFla8iQJMak72n11BwaPcbCvUO1J
yEimUEGYKAapTMMvvT1ICA8XxdTvEAa5YNJjG08S4vjA0otxGIMadyxvanmT
EEGHgmULUwyGMCos1m+SkPWCNQX30xgUm09cefCAhIzypv3S8sFgB2bMp/CI
hHScm6ts9MdgdN/y7oZoEvL4efUz9SAMsnyzs+NIJCGTdRW8tyMwWFnG7vU2
hYTk2mEmjo8w6J9fcv9YOglRdwyK5I3B4GSSUHFkNgmRynkG8GQMZj+ub1J4
S0JW3Z2PiqVj0OWeP7XhPQnRrFbw2fkSg22Xu/h3fCbsrZt2j95i8LFrhPK7
EhKSQUrJ2HyPQeNTWoam5STEQ892j+FHDJbrJ/o+rCEhMuFjAqAYgzc0jKMU
v5EQs/1h25a/YFBtz/LLxgYS8ly90/JOOQYnxF6XXWoi9ObYW9JRicEskl3r
jhYSQrrzjmm9GoPO29j/vWsn/JGQWZhHMSi0Wsxk1k1C4icOWZfVYrCFdl5k
spewDziMWH7FYNSooHrUALHfy7cXP3/DoFHPNxOlERIixy3wGqvH4GaTn+uP
MRJS+NPcfeI7Bktr5G9e/kfotVzjXNqAQd+SzmjOGRISnZPrZNeIQZX391/n
zpKQkodrUrUEYy8OVJstEvUUduXaGsGZ8WOdkyskJOSg7w6WHxh0fJgwE7VG
QizfmxR0EnaB4KPblLdIyGzDqII/wc2+S7t+spCRoG2b+0aJ/SIv5mheYScj
bFPc0bsIPuJsa8HFSUa6PhzdlCb8W7fadu49Dxk5Up1muEDEU3K0ONCcTEbW
HVGJGCJe70Pn46YEyAi7jIwVndBDaa/g+0ciZOTcy+kk5RqiHmW/1SrvIiOh
2PYSRYjBDBG/3p+SZITGK3J5ntDbnkd+/oosGUnsDLp+n8gHhaVzB/ceMrIq
ffLZCJGvpuVw6TwlMhKQcDl0B5HPiCnNgxZqZGRI2GHbagHRDx3xHo8PkJH+
+IQyLaIeihqNQlQOEvF8yLoQ+gaDXtWLSU16ZERDniU98RUGR96c+s5tRIxP
lE4VTsPg8+dsg3kmZMT3uVtvWCIG7Z4VLVuYk5FkJTzxyzMM/ggQ2P3Emow0
p/++ceMBBsOvfdVXtSP8iTjJs3EPgwbnbtj+ciAjSlyhJAuiHwqPd4TzuJOR
+GzSET1vDKZKxY8+uUbsV7/t4xlbDOoG39cJuk5GWCoamn2OY7C/z//J5Ztk
pC2i4AU4ikHJJAdtk7uEvj5W4+yaRH/wSD5iekpGbpxoWzrIS9T7FdIQLZaM
0CVbH5LZMDjewHzgbyLh/6ruxAvGGFQKpw6UZZAR7/c3IgdHx+DH1Xca1/PJ
SPC+238Gi8aglX3aA/dCMsLZxmHy39sxOF/8uP9ECZFfVDUwNW0Mavpci1Cp
JiOxW5Z5MvfGYPm4Zu/YLzJSxGRn9vQYcX51wHv2M2QEMT+cFNJAhRc0CrqM
58iISlSPFPkLFW6PyVI+sERG7JFgrhM5VGhmfr+TvEFGqDcC7FtDqPB3jZni
T24KEn44gYW6nwq9JfWCy0gUxFOruLFdkgopd1Tb3whQEL28r4+vclHhKR3S
nfBdFKRFJ9U0fXgU9uZ3tuirUBB6bbz18MNRGMj9XV5FnYLomEYXCFwfhbsu
lwaIalIQgS/OYTSnUegqnya3oktBjO63f4xTGYXUNLdbn8wpiNV2wTNJjSMQ
j5ySlL1CQeQyTaPF5oehnHjXy2YvCtK0hE5f7B6G9gWobIAvMT/DvMS1chii
fxL2tN6mIDGxjNkT94dhrBKy924kBdH8IFm8h38YajXFG/TlUJBb14WO20sM
wctud9GIdxSE49jT1FPrg/DF4qUjGh8oiNvBbJUjFYOQQxwYPyyiICFiL54u
aw3C3qv/jmvXURARAaHu9/IDMJjP4EzcEAWxX/9vJmSwDxa+Uhg0oFKQT9uQ
Ppu4Pjiuze8+OU5B3vo3bLob90Ert4lzh3FiPEl+j0puL5QpiPXENwj9Ok0D
z3j8gd+sxwPNxfiRmOJLO52J+wh3Ykwqqx0/ou527NG3xhZ4dJd29nMHfiTz
zbd08fMtMDjr74cDZ/gRpMvhj8bWbzibr1Rz8RzBDzI0Zv9rhh3fv47/9OVH
hvzn8jxEfsLnDLpm/FN+BHWO9/BV/go7774wUI3jR6QUVO6nHa2DvOzGx+oT
+REmTyTv35laGEKJc6KnE3a3yF3TkSg8p6wa6pxH2DkuT8fFlEGVM+6/5Rr5
kRCdno9P3r2C50e3/6lqIuzrPAHmai9gxqX8EbsWgsdTom4zEiHJf20pspvg
jsgE9uDbcDE6YdfMGMFqJ8TGktJAJdp4qZhFAAl5aW4W8a4UmMtpsBnrCSCZ
2/eTdct/A09+UXNVhOBnKoHLT1vAYxaWWAEjAcTNLTlNzagVNA21So6aCyBM
XrxFdZ/agGW6j26IkwCCcu9cKkrtBFZCBb7lAQLI0JG5nw6f+4Adh/qwWpkA
oh72Rqs4lAr8V4QVhKoIHvznPb9ABYnYltcGSqw3JLlj6/wY6P76e/1nA2HP
P/E+ygID9veuiVzqEUAUqp77RslOAKfV/BOvVgh/9A4t7l6dAm7TqtXCWoKI
N1M315bCPBCg8GlUHhREQoLk4uYuz4Pv2rM5bvqCiMjMwUbLD/NALazwyTsj
QQRRKXUw378A1ndqn9G1EUQ8cO8/TkaLIMkEWXfxFkQaHOZXrQOXQXOW9aHX
uYJI6XkvNAxZA6EN+/PN8gWRmJPOP/tj1sABmoAMXiCIRDYcTy0cXgPPD3bv
0CkTRD7tINO7wtfB5RanP43fBRG3dqsdAq0bgH3z3K0ZqiCSbb/33DLChOg7
3CzRlBRC1m2qsrvkWJG2YZHnR2WFkOyuoihRJ1bE43L5Pbs9QohezMlLZc9Y
kdjADYtbe4WQzKyjfJxMxLsgPWy0Agghp2Iv7do2zIZEjzwlGboJIRy1WUGd
RexIpM0m7YCPENJe1XdKuXI78j9mfuxS
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
RexIpM0m7YCPENJe1XdKuXI78j9mfuxS
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-5.7846, 5.7846}, {-2.951113187032795, 
            2.9668795232353005`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-5.7846, 5.7846}, {-2.951113187032795, 
           2.9668795232353005`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.24, 0.6, 0.8], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
RexIpM0m7YCPENJe1XdKuXI78j9mfuxS
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-5.7846, 5.7846}, {-2.951113187032795, 
        2.9668795232353005`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.7846, 5.7846}, {-2.951113187032795, 2.9668795232353005`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.949188839536552*^9, {3.9491888820932713`*^9, 3.9491888877692223`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"f0cf948e-f632-4670-8a7b-d1d700bac3ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoefficientList", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"x", "-", 
     FractionBox[
      SuperscriptBox["x", "3"], "6"], "+", 
     FractionBox[
      SuperscriptBox["x", "5"], "120"], "-", 
     FractionBox[
      SuperscriptBox["x", "7"], "5040"], "+", 
     FractionBox[
      SuperscriptBox["x", "9"], "362880"], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "x", "]"}], "10"],
      SeriesData[$CellContext`x, 0, {}, 1, 10, 1],
      Editable->False]}],
    SeriesData[$CellContext`x, 0, {1, 0, 
      Rational[-1, 6], 0, 
      Rational[1, 120], 0, 
      Rational[-1, 5040], 0, 
      Rational[1, 362880]}, 1, 10, 1],
    Editable->False], ",", "x"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"c0467604-ddbc-4730-becd-8b167b86fbc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1", "6"]}], ",", "0", ",", 
   FractionBox["1", "120"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1", "5040"]}], ",", "0", ",", 
   FractionBox["1", "362880"]}], "}"}]], "Output",
 CellChangeTimes->{3.949188820698308*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"24665237-fe1b-45a7-93d0-b5cf8211095a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "0", ",", 
    RowBox[{"-", 
     FractionBox["1", "6"]}], ",", "0", ",", 
    FractionBox["1", "120"], ",", "0", ",", 
    RowBox[{"-", 
     FractionBox["1", "5040"]}], ",", "0", ",", 
    FractionBox["1", "362880"]}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"9a8b4301-7a3b-4fe1-b1d1-cdc87f92c95f"],

Cell[BoxData[
 FractionBox["305353", "362880"]], "Output",
 CellChangeTimes->{3.949188833418914*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e3d0d75b-a422-48f7-8c37-c45e55d17848"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Normal", "[", 
     InterpretationBox[
      RowBox[{"x", "-", 
       FractionBox[
        SuperscriptBox["x", "3"], "6"], "+", 
       FractionBox[
        SuperscriptBox["x", "5"], "120"], "+", 
       InterpretationBox[
        SuperscriptBox[
         RowBox[{"O", "[", "x", "]"}], "6"],
        SeriesData[$CellContext`x, 0, {}, 1, 6, 1],
        Editable->False]}],
      SeriesData[$CellContext`x, 0, {1, 0, 
        Rational[-1, 6], 0, 
        Rational[1, 120]}, 1, 6, 1],
      Editable->False], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10.954451150103322`"}], ",", "10.954451150103322`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"b9739f08-1691-49a6-948a-d1234a0a51ca"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9491888543287992`*^9, 
  3.949188854752946*^9}},ExpressionUUID->"36453d0b-2611-4951-bcb4-\
34e773c9e98a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Parameters", "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]R", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rabi", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]", "=", "0.5"}], ";"}], " ", 
   RowBox[{"(*", "Detuning", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"\[CapitalOmega]R", "^", "2"}], "+", 
       RowBox[{"\[CapitalDelta]", "^", "2"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Generalized", " ", "Rabi", " ", "frequency"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "being", " ", "in", " ", "the", " ", 
     "excited", " ", "state", " ", "as", " ", "a", " ", "function", " ", "of",
      " ", "time"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pe", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[CapitalOmega]R", "^", "2"}], "/", 
       RowBox[{"\[CapitalOmega]", "^", "2"}]}], ")"}], "*", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[CapitalOmega]", " ", 
        RowBox[{"t", "/", "2"}]}], "]"}], "^", "2"}]}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "the", " ", "Rabi", " ", "oscillations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Pe", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Rabi Oscillations\>\""}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Time (t)\>\"", ",", "\"\<P_e(t)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.949188949449703*^9, 3.949188949452641*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c36aa232-8fbf-41ca-912c-910f839b271b"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
         LineBox[CompressedData["
1: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
yITqOerSygqJF1ynnV8w4X/LWvyS
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              Thickness[Large], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1: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
yITqOerSygqJF1ynnV8w4X/LWvyS
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 19.999999591836733`}, {0., 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              Thickness[Large], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0., 19.999999591836733`}, {0., 1.}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
yITqOerSygqJF1ynnV8w4X/LWvyS
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0., 19.999999591836733`}, {0., 1.}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Time (t)\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"P_e(t)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Rabi Oscillations\"", TraditionalForm],
  PlotRange->{{0., 19.999999591836733`}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9491889531261377`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"6eb28b9d-24c3-44e2-9b7f-ec86edcb8f4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Unperturbed", " ", "energy", " ", "levels"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"E1", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"E2", "=", "\[CapitalDelta]"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Energy", " ", "gap", " ", "between", " ", "the", " ", "levels"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Time", "-", 
      RowBox[{"dependent", " ", 
       RowBox[{"perturbation", ":", 
        RowBox[{"assume", " ", "V", 
         RowBox[{"(", "t", ")"}]}]}]}]}], "=", 
     RowBox[{"V0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"V0", "=", "0.1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"V", "[", "t_", "]"}], ":=", 
     RowBox[{"V0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "matrix"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"H", "[", "t_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E1", ",", 
        RowBox[{"V", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V", "[", "t", "]"}], ",", "E2"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "order", " ", "energy", " ", "shift", " ", "using", " ", "TDPT", " ", 
      "formula"}]}], "*)"}], "\n", 
   RowBox[{"\[CapitalDelta]E1SecondOrder", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"V", "[", "t", "]"}], "]"}], "^", "2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"E1", "-", "E2"}], ")"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", 
         RowBox[{"(", 
          RowBox[{"E1", "-", "E2"}], ")"}], " ", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", ">", "0"}], ",", 
         RowBox[{"V0", ">", "0"}], ",", 
         RowBox[{"\[Omega]", ">", "0"}]}], "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]E2SecondOrder", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"V", "[", "t", "]"}], "]"}], "^", "2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"E2", "-", "E1"}], ")"}]}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", " ", 
         RowBox[{"(", 
          RowBox[{"E2", "-", "E1"}], ")"}], " ", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Assumptions", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]", ">", "0"}], ",", 
         RowBox[{"V0", ">", "0"}], ",", 
         RowBox[{"\[Omega]", ">", "0"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "the", " ", "results"}], "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{
    "\[CapitalDelta]E1SecondOrder", ",", "\[CapitalDelta]E2SecondOrder"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.949189078350666*^9, 3.949189080223028*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c8b4a3e0-12dc-43a6-bcef-b32927f371a7"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.018666666666666668`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.9491890866900377`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"41c5e215-bf89-479e-be66-9cf0ff17e3b6"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.018666666666666668`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.949189089423024*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"9332f6e4-cba1-4d4a-97bd-ae8495839705"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.018666666666666668`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.018666666666666668`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.949189089424008*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c161dbc3-d0c5-4208-8006-5b9cf432874e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"::", "Section", "::"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ", 
     "for", " ", "a", " ", "Spin"}], "-", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[\"\[Gamma]\", \
TraditionalForm], \"errors\" -> {}, \"input\" -> \"\\\\gamma\", \"state\" -> \
\"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9491900080541058`*^9, 3.94919000805647*^9}, {
  3.9491901007391453`*^9, 3.9491901685959167`*^9}, {3.949190262332284*^9, 
  3.949190266842436*^9}, {3.949190482396047*^9, 3.949190483685602*^9}, {
  3.949190694288808*^9, 3.949190713463163*^9}, {3.94919074559548*^9, 
  3.949190774986639*^9}, {3.949191391788118*^9, 3.94919140702423*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"4e096acd-a1f3-4ac3-83fe-dd0994739544"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "symname", 
   "\"The string \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*TemplateBox[<|\\\\\
\\\\\\\\\\\"boxes\\\\\\\\\\\\\\\" -> FormBox[\\\\\\\\\\\\\\\"\[Gamma]\\\\\\\\\
\\\\\\\", TraditionalForm], \\\\\\\\\\\\\\\"errors\\\\\\\\\\\\\\\" -> {}, \
\\\\\\\\\\\\\\\"input\\\\\\\\\\\\\\\" -> \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\gamma\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"state\\\\\\\\\\\\\\\" -> \
\\\\\\\\\\\\\\\"Boxes\\\\\\\\\\\\\\\"|>,\\\\\\\\\\\\\\\"TeXAssistantTemplate\\\
\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\"}]\\)\\\" cannot be used for a symbol \
name. A symbol name must start with a letter followed by letters and numbers.\
\"", 2, 132, 4, 19970397668640659609, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.9491911281943274`*^9, 3.9491914088721027`*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"82d3e816-ae8a-48ec-9390-c905942f4aba"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "Bp", " ", 
       RowBox[{
        "Symbol", "[", 
         "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\", \
TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], 
     RowBox[{
       RowBox[{"(", 
         RowBox[{
           RowBox[{"2", " ", "Bz", " ", 
             
             RowBox[{"Symbol", "[", 
               "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], "-", 
           RowBox[{"2", " ", "\[Omega]p"}]}], ")"}], " ", 
       RowBox[{"(", 
         RowBox[{"\[Omega]p", "-", 
           RowBox[{"Bz", " ", "\[HBar]", " ", 
             
             RowBox[{"Symbol", "[", 
               "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}]}]], 
    RowBox[{
      RowBox[{"Im", "(", 
        RowBox[{"\[HBar]", " ", 
          
          RowBox[{"Symbol", "[", 
            "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\
\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], ")"}], "<", 
      "0"}]},
   "ConditionalExpression"], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.949190027757003*^9, {3.949190296131653*^9, 3.9491903162559023`*^9}, 
   3.9491911519318533`*^9, 3.9491914310963306`*^9},
 CellLabel->
  "Out[154]//TraditionalForm=",ExpressionUUID->"169dd632-330d-4273-a91a-\
875ea59a7299"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "Bp", " ", 
       RowBox[{
        "Symbol", "[", 
         "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\", \
TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], 
     RowBox[{"2", " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"Bz", " ", 
             
             RowBox[{"Symbol", "[", 
               "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], "+", 
           "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
         RowBox[{"\[Omega]p", "-", 
           RowBox[{"Bz", " ", "\[HBar]", " ", 
             
             RowBox[{"Symbol", "[", 
               "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}]}]], 
    RowBox[{
      RowBox[{"Im", "(", 
        RowBox[{"\[HBar]", " ", 
          
          RowBox[{"Symbol", "[", 
            "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\
\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], ")"}], ">", 
      "0"}]},
   "ConditionalExpression"], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.949190027757003*^9, {3.949190296131653*^9, 3.9491903162559023`*^9}, 
   3.9491911519318533`*^9, 3.949191431122614*^9},
 CellLabel->
  "Out[155]//TraditionalForm=",ExpressionUUID->"7550eec6-eb9d-440f-b6c6-\
f8027e806e4e"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "Bp", " ", 
      RowBox[{
       "Symbol", "[", 
        "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\", \
TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], 
    RowBox[{
      RowBox[{"(", 
        RowBox[{
          RowBox[{
            RowBox[{"-", "2"}], " ", "\[Omega]p"}], "+", 
          RowBox[{"2", " ", "Bz", " ", 
            
            RowBox[{"Symbol", "[", 
              "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\
\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
        RowBox[{"\[Omega]p", "-", 
          RowBox[{"Bz", " ", "\[HBar]", " ", 
            
            RowBox[{"Symbol", "[", 
              "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\
\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}]}]], 
   RowBox[{
     RowBox[{"Im", "[", 
       RowBox[{"\[HBar]", " ", 
         RowBox[{
          "Symbol", "[", 
           "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], "]"}], "<", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.949190027757003*^9, {3.949190296131653*^9, 3.9491903162559023`*^9}, 
   3.9491911519318533`*^9, 3.949191431133655*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"98887d81-2c6e-4a9f-8a36-539d07532335"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "Bp", " ", 
      RowBox[{
       "Symbol", "[", 
        "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\\\", \
TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], 
    RowBox[{"2", " ", 
      RowBox[{"(", 
        RowBox[{"\[Omega]p", "+", 
          RowBox[{"Bz", " ", 
            
            RowBox[{"Symbol", "[", 
              "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\
\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
        RowBox[{"\[Omega]p", "-", 
          RowBox[{"Bz", " ", "\[HBar]", " ", 
            
            RowBox[{"Symbol", "[", 
              "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Gamma]\
\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}]}], ")"}]}]], 
   RowBox[{
     RowBox[{"Im", "[", 
       RowBox[{"\[HBar]", " ", 
         RowBox[{
          "Symbol", "[", 
           "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", "]"}]}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.949190027757003*^9, {3.949190296131653*^9, 3.9491903162559023`*^9}, 
   3.9491911519318533`*^9, 3.94919143115162*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"9d856382-a77f-4787-9c47-362516fb1dc8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"::", "Section", "::"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ", 
     "for", " ", "a", " ", "Spin"}], "-", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[\"\[Gamma]\", \
TraditionalForm], \"errors\" -> {}, \"input\" -> \"\\\\gamma\", \"state\" -> \
\"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{"::", "Section", "::"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ",
        "for", " ", "a", " ", "Spin"}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\n", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{"::", "Section", "::"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ",
        "for", " ", "a", " ", "Spin"}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\n", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{"::", "Section", "::"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ",
        "for", " ", "a", " ", "Spin"}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\n", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{"::", "Section", "::"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ",
        "for", " ", "a", " ", "Spin"}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
       RowBox[{
        RowBox[{"E0", "=", 
         RowBox[{"energies", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
         "*)"}], 
        RowBox[{"psi", "=", 
         RowBox[{"states", "[", 
          RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}],
          "*)"}], 
        RowBox[{"sum", "=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"E1", "=", 
                RowBox[{"energies", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"phi", "=", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
               RowBox[{"(*", 
                RowBox[{
                "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                  "the", " ", "sum"}], "*)"}], 
               RowBox[{"Integrate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi", "]"}], ".", "Vt", ".", 
                    "phi"}], "/.", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                    "phi_"}], "->", "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                    "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
                   
                   RowBox[{"(", 
                    RowBox[{"E0", "-", "E1", "+", 
                    RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"TDPT", " ", "second"}], "-", 
                   RowBox[{"order", " ", "formula"}]}], "*)"}], 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
                 RowBox[{"Assumptions", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Omega]perp", ">", "0"}], ",", 
                    RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
                RowBox[{"(*", 
                 RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
                 "*)"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
          RowBox[{"(*", 
           RowBox[{
           "Sum", " ", "over", " ", "all", " ", "intermediate", " ", 
            "states"}], "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "sum"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EPlus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CapitalDelta]EMinus", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
   RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
     RowBox[{"Eq", ".", 
      RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "and", " ", "simplify", " ", "final", " ", 
     "expressions"}], "*)"}], "\n", 
   RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
   RowBox[{
    RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{"::", "Section", "::"}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "TDPT", " ", "Derivation", " ", "of", " ", "Energy", " ", "Shifts", " ",
        "for", " ", "a", " ", "Spin"}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "System"}]}], "*)"}], 
    RowBox[{"(*", 
     RowBox[{"Parameters", " ", "and", " ", "Definitions"}], "*)"}], 
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     TemplateBox[<|
      "boxes" -> FormBox["\[Gamma]", TraditionalForm], "errors" -> {}, 
       "input" -> "\\gamma", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "=", 
     RowBox[{
     "Symbol", 
      "[", "\"\<\!\(\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[\\\"\[Gamma]\\\", TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\
\" -> \\\"\\\\\\\\gamma\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\)\>\"", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Gyromagnetic", " ", "ratio"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Bz", "=", 
     RowBox[{"Symbol", "[", "\"\<Bz\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Bperp", "=", 
     RowBox[{"Symbol", "[", "\"\<Bp\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]0", "=", 
     RowBox[{"\[Gamma]", " ", "Bz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Larmor", " ", "frequency"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]perp", "=", 
     RowBox[{"Symbol", "[", "\"\<\[Omega]p\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\:0127", "=", 
     RowBox[{"Symbol", "[", "\"\<\[HBar]\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Pauli", " ", "matrices", " ", "for", " ", "spin"}], "-", 
     RowBox[{"1", "/", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]x", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]x"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sy", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]y"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sz", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\:0127", "/", "2"}], ")"}], " ", "\[Sigma]z"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Spin", " ", "ladder", " ", "operators"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sp", "=", 
     RowBox[{"Sx", "+", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sm", "=", 
     RowBox[{"Sx", "-", 
      RowBox[{"I", " ", "Sy"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Hamiltonian", " ", "components"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Bz", " ", "Sz"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Unperturbed", " ", "Hamiltonian"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Vt", "=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Bperp", "/", "2"}]}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sm", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], " ", "\[Omega]perp", " ", "t"}], "]"}]}], "+", 
        
        RowBox[{"Sp", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "\[Omega]perp", " ", "t"}], "]"}]}]}], ")"}]}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"dependent", " ", "perturbation"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", "-", 
     RowBox[{
     "Order", " ", "Energy", " ", "Shift", " ", "Calculation", " ", "Using", " ",
       "TDPT"}]}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Eigenstates", " ", "and", " ", "eigenvalues", " ", "of", " ", "H0"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", "H0", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"states", "=", "vecs"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energies", "=", "vals"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Define", " ", "second"}], "-", 
     RowBox[{
     "order", " ", "TDPT", " ", "energy", " ", "shift", " ", "function"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"secondOrderShift", "[", "stateIndex_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E0", ",", "psi", ",", "sum"}], "}"}], ",", 
      RowBox[{
       RowBox[{"E0", "=", 
        RowBox[{"energies", "[", 
         RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Energy", " ", "of", " ", "the", " ", "target", " ", "state"}], 
        "*)"}], 
       RowBox[{"psi", "=", 
        RowBox[{"states", "[", 
         RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Wavefunction", " ", "of", " ", "the", " ", "target", " ", "state"}], 
        "*)"}], 
       RowBox[{"sum", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"E1", "=", 
              RowBox[{"energies", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", 
             RowBox[{"phi", "=", 
              RowBox[{"states", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "==", "stateIndex"}], ",", "0", ",", 
             RowBox[{"(*", 
              RowBox[{
              "Skip", " ", "the", " ", "state", " ", "itself", " ", "in", " ",
                "the", " ", "sum"}], "*)"}], 
             RowBox[{"Integrate", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Conjugate", "[", "psi", "]"}], 
                "."}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.9491900080541058`*^9, 3.94919000805647*^9}, {
  3.9491901007391453`*^9, 3.9491901685959167`*^9}, {3.949190262332284*^9, 
  3.949190266842436*^9}, {3.949190482396047*^9, 3.949190483685602*^9}, {
  3.949190694288808*^9, 3.949190713463163*^9}, {3.94919074559548*^9, 
  3.949190774986639*^9}, {3.949191391788118*^9, 3.94919140702423*^9}, {
  3.9492298516012373`*^9, 3.949229876002511*^9}, {3.949230202066306*^9, 
  3.949230204163321*^9}},ExpressionUUID->"30aaf4e5-9108-44d6-b43b-\
453d8b84abc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Vt", ".", "phi"}], "/.", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sp", ".", 
                   "phi_"}], "->", "1"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Conjugate", "[", "psi_", "]"}], ".", "Sm", ".", 
                   "phi_"}], "->", "1"}]}], "}"}]}], ")"}], "*", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", 
                RowBox[{"(", 
                 RowBox[{"E0", "-", "E1"}], ")"}], " ", "t"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"E0", "-", "E1", "+", 
                RowBox[{"\:0127", " ", "\[Omega]perp"}]}], ")"}]}]}], ",", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"TDPT", " ", "second"}], "-", 
              RowBox[{"order", " ", "formula"}]}], "*)"}], 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
            RowBox[{"Assumptions", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Omega]perp", ">", "0"}], ",", 
               RowBox[{"Bz", ">", "0"}]}], "}"}]}]}], "   ", 
           RowBox[{"(*", 
            RowBox[{"Assumptions", " ", "for", " ", "simplification"}], 
            "*)"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "           ", 
       RowBox[{"(*", 
        RowBox[{
        "Sum", " ", "over", " ", "all", " ", "intermediate", " ", "states"}], 
        "*)"}], "]"}], ";"}], "\[IndentingNewLine]", "sum"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Calculate", " ", "energy", " ", "shifts", " ", "for"}], "|", 
    RowBox[{
     RowBox[{
      RowBox[{"+", "1"}], "/", "2"}], ">", "and"}], "|", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ">"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]EPlus", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"secondOrderShift", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]EMinus", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{"secondOrderShift", "[", "2", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Display", " ", "Results"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalDelta]EPlus", "//", "TraditionalForm"}], "\n", 
 RowBox[{
  RowBox[{"\[CapitalDelta]EMinus", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"::", "Section", "::"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Check", " ", "for", " ", "Matching", " ", "with", " ", 
    RowBox[{"Eq", ".", 
     RowBox[{"(", "6", ")"}]}], " ", "and", " ", 
    RowBox[{"Eq", ".", 
     RowBox[{"(", "7", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Extract", " ", "and", " ", "simplify", " ", "final", " ", "expressions"}],
    "*)"}]}], "\n", 
 RowBox[{"Simplify", "[", "\[CapitalDelta]EPlus", "]"}], "\n", 
 RowBox[{"Simplify", "[", "\[CapitalDelta]EMinus", "]"}]}], "Input",
 CellChangeTimes->{{3.9491900080541058`*^9, 3.94919000805647*^9}, {
  3.9491901007391453`*^9, 3.9491901685959167`*^9}, {3.949190262332284*^9, 
  3.949190266842436*^9}, {3.949190482396047*^9, 3.949190483685602*^9}, {
  3.949190694288808*^9, 3.949190713463163*^9}, {3.94919074559548*^9, 
  3.949190774986639*^9}, {3.949191391788118*^9, 3.94919140702423*^9}, {
  3.9492298516012373`*^9, 
  3.949229876002511*^9}},ExpressionUUID->"70a101ae-d2a6-4c68-aef7-\
b4825e76c874"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Define", " ", "time"}], "-", 
    RowBox[{"dependent", " ", "variables"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"vars", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "[", "t", "]"}], ",", 
       RowBox[{"F", "[", "t", "]"}], ",", 
       RowBox[{"G", "[", "t", "]"}], ",", 
       RowBox[{"H", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\\[", "OverBar", "]"}], 
        RowBox[{"L", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\\[", "OverBar", "]"}], 
        RowBox[{"F", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\\[", "OverBar", "]"}], 
        RowBox[{"G", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\\[", "OverBar", "]"}], 
        RowBox[{"H", "[", "t", "]"}]}]}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"delta", "[", "t_", "]"}], ":=", 
     RowBox[{"\[Delta]", "[", "t", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gamma1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[Gamma]1", "[", "t", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"gamma2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[Gamma]2", "[", "t", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Omega1", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]1", "[", "t", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Omega2", "[", "t_", "]"}], ":=", 
     RowBox[{"\[CapitalOmega]2", "[", "t", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqns", "=", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"System", " ", "for", " ", "U"}], "*)"}], 
      RowBox[{
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"L", "[", "t", "]"}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"delta", "[", "t", "]"}], "-", 
            RowBox[{"I", " ", 
             RowBox[{
              RowBox[{"gamma2", "[", "t", "]"}], "/", "2"}]}]}], ")"}], " ", 
          RowBox[{"L", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Omega1", "[", "t", "]"}], " ", 
          RowBox[{"F", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Omega2", "[", "t", "]"}]}], " ", 
          RowBox[{"L", "[", "t", "]"}]}], "-", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"gamma1", "[", "t", "]"}], "/", "2"}], " ", 
          RowBox[{"F", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"G", "[", "t", "]"}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"delta", "[", "t", "]"}], "-", 
            RowBox[{"I", " ", 
             RowBox[{
              RowBox[{"gamma2", "[", "t", "]"}], "/", "2"}]}]}], ")"}], " ", 
          RowBox[{"G", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Omega1", "[", "t", "]"}], " ", 
          RowBox[{"H", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"H", "[", "t", "]"}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Omega2", "[", "t", "]"}]}], " ", 
          RowBox[{"G", "[", "t", "]"}]}], "-", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"gamma1", "[", "t", "]"}], "/", "2"}], " ", 
          RowBox[{"H", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"System", " ", "for", " ", "U", " ", "bar"}], "*)"}], 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\\[", "OverBar", "]"}], 
            RowBox[{"L", "[", "t", "]"}]}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"delta", "[", "t", "]"}], "+", 
            RowBox[{"I", " ", 
             RowBox[{
              RowBox[{"gamma2", "[", "t", "]"}], "/", "2"}]}]}], ")"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"L", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"Omega2", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"F", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\\[", "OverBar", "]"}], 
            RowBox[{"F", "[", "t", "]"}]}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"Omega1", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"L", "[", "t", "]"}]}], "+", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"gamma1", "[", "t", "]"}], "/", "2"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"F", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\\[", "OverBar", "]"}], 
            RowBox[{"G", "[", "t", "]"}]}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"delta", "[", "t", "]"}], "+", 
            RowBox[{"I", " ", 
             RowBox[{
              RowBox[{"gamma2", "[", "t", "]"}], "/", "2"}]}]}], ")"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"G", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"Omega2", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"H", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\\[", "OverBar", "]"}], 
            RowBox[{"H", "[", "t", "]"}]}], ",", "t"}], "]"}]}], "==", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"Omega1", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"G", "[", "t", "]"}]}], "+", 
         RowBox[{"I", " ", 
          RowBox[{
           RowBox[{"gamma1", "[", "t", "]"}], "/", "2"}], " ", 
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"H", "[", "t", "]"}]}]}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Initial", " ", "conditions"}], "*)"}], 
       RowBox[{
        RowBox[{"L", "[", "0", "]"}], "==", "1"}], ",", 
       RowBox[{
        RowBox[{"F", "[", "0", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"G", "[", "0", "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"H", "[", "0", "]"}], "==", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\\[", "OverBar", "]"}], 
         RowBox[{"L", "[", "0", "]"}]}], "==", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\\[", "OverBar", "]"}], 
         RowBox[{"F", "[", "0", "]"}]}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\\[", "OverBar", "]"}], 
         RowBox[{"G", "[", "0", "]"}]}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\\[", "OverBar", "]"}], 
         RowBox[{"H", "[", "0", "]"}]}], "==", "1"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.949256200536592*^9, 3.949256216649*^9}, {
  3.949256468827911*^9, 3.94925647852125*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"1c4a3e98-f900-4f94-aca3-8a7775c959a1"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "sntxb", 
   "\"Expression cannot begin with \\\"\\!\\(\\*RowBox[{RowBox[{\\\"\\\\\\\\[\
\\\", \\\"OverBar\\\", \\\"]\\\"}], RowBox[{\\\"L\\\", \\\"[\\\", \\\"t\\\", \
\\\"]\\\"}]}]\\)\\\".\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\)\"", 2, 
   167, 8, 19970397668640659609, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.949256494047944*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"74375e06-fb4c-4192-81d2-1bef5da62d71"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraints", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"L", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"L", "[", "t", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"F", "[", "t", "]"}]}], "]"}]}]}], "==", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"G", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"G", "[", "t", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"H", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"H", "[", "t", "]"}]}], "]"}]}]}], "==", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"G", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"L", "[", "t", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"H", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"F", "[", "t", "]"}]}], "]"}]}]}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"L", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"G", "[", "t", "]"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"F", "[", "t", "]"}], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"\\[", "OverBar", "]"}], 
          RowBox[{"H", "[", "t", "]"}]}], "]"}]}]}], "==", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9492562264048433`*^9, 3.949256226407366*^9}, {
   3.949256435154546*^9, 3.949256438149914*^9}, 3.949256488688777*^9},
 CellLabel->
  "In[167]:=",ExpressionUUID->"b0660583-1797-46e8-a5f9-881a8b5d3625"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Solve", " ", "the", " ", "system", " ", "numerically"}], "*)"}], 
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{"eqns", ",", 
      RowBox[{"{", 
       RowBox[{"L", ",", "F", ",", "G", ",", "H"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.949256270352049*^9, 3.949256270355667*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"6231d332-b8ff-4fdd-a2cc-c4bafbe3fb2d"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue", "underdet", 
   "\"There are more dependent variables, \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"F\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"G\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"L\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[Gamma]1\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[Gamma]2\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[Delta]\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"\
\[CapitalOmega]1\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"\[CapitalOmega]2\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \
\\\"}\\\"}]\\), than equations, so the system is underdetermined.\"", 2, 166, 
   5, 19970397668640659609, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{3.949256272808919*^9},
 CellLabel->
  "During evaluation of \
In[166]:=",ExpressionUUID->"59a3548d-fe06-44a9-a3a6-2088b77954b0"]
}, Open  ]]
},
WindowSize->{1253, 1387},
WindowMargins->{{Automatic, 0}, {Automatic, -484}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0592ce41-9506-45b4-8bb5-9357d992cdc5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 682, 16, 49, "Input",ExpressionUUID->"64f4e67e-d180-4f13-b0bf-903e3c9ffd3e"],
Cell[1261, 40, 784, 23, 48, "Output",ExpressionUUID->"ad16864c-adec-4920-9dea-8552a7b0e1df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2082, 68, 1101, 31, 45, "Input",ExpressionUUID->"c9373f43-ddc0-4270-bdbb-1505619c352a"],
Cell[3186, 101, 50605, 876, 236, "Output",ExpressionUUID->"f0cf948e-f632-4670-8a7b-d1d700bac3ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53828, 982, 844, 25, 45, "Input",ExpressionUUID->"c0467604-ddbc-4730-becd-8b167b86fbc4"],
Cell[54675, 1009, 411, 10, 46, "Output",ExpressionUUID->"24665237-fe1b-45a7-93d0-b5cf8211095a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55123, 1024, 428, 11, 42, "Input",ExpressionUUID->"9a8b4301-7a3b-4fe1-b1d1-cdc87f92c95f"],
Cell[55554, 1037, 178, 3, 46, "Output",ExpressionUUID->"e3d0d75b-a422-48f7-8c37-c45e55d17848"]
}, Open  ]],
Cell[55747, 1043, 859, 25, 45, "Input",ExpressionUUID->"b9739f08-1691-49a6-948a-d1234a0a51ca"],
Cell[56609, 1070, 154, 3, 29, "Input",ExpressionUUID->"36453d0b-2611-4951-bcb4-34e773c9e98a"],
Cell[CellGroupData[{
Cell[56788, 1077, 2125, 55, 213, "Input",ExpressionUUID->"c36aa232-8fbf-41ca-912c-910f839b271b"],
Cell[58916, 1134, 68256, 1169, 251, "Output",ExpressionUUID->"6eb28b9d-24c3-44e2-9b7f-ec86edcb8f4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127209, 2308, 3722, 105, 376, "Input",ExpressionUUID->"c8b4a3e0-12dc-43a6-bcef-b32927f371a7"],
Cell[130934, 2415, 250, 4, 33, "Output",ExpressionUUID->"41c5e215-bf89-479e-be66-9cf0ff17e3b6"],
Cell[131187, 2421, 248, 4, 33, "Output",ExpressionUUID->"9332f6e4-cba1-4d4a-97bd-ae8495839705"],
Cell[131438, 2427, 403, 9, 33, "Output",ExpressionUUID->"c161dbc3-d0c5-4208-8006-5b9cf432874e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131878, 2441, 11162, 295, 1216, "Input",ExpressionUUID->"4e096acd-a1f3-4ac3-83fe-dd0994739544"],
Cell[143043, 2738, 974, 18, 26, "Message",ExpressionUUID->"82d3e816-ae8a-48ec-9390-c905942f4aba"],
Cell[144020, 2758, 1958, 47, 73, "Output",ExpressionUUID->"169dd632-330d-4273-a91a-875ea59a7299"],
Cell[145981, 2807, 1936, 47, 73, "Output",ExpressionUUID->"7550eec6-eb9d-440f-b6c6-f8027e806e4e"],
Cell[147920, 2856, 1910, 46, 68, "Output",ExpressionUUID->"98887d81-2c6e-4a9f-8a36-539d07532335"],
Cell[149833, 2904, 1850, 44, 68, "Output",ExpressionUUID->"9d856382-a77f-4787-9c47-362516fb1dc8"]
}, Open  ]],
Cell[151698, 2951, 61236, 1654, 6792, "Input",ExpressionUUID->"30aaf4e5-9108-44d6-b43b-453d8b84abc2"],
Cell[212937, 4607, 4148, 104, 397, "Input",ExpressionUUID->"70a101ae-d2a6-4c68-aef7-b4825e76c874"],
Cell[CellGroupData[{
Cell[217110, 4715, 8186, 233, 356, "Input",ExpressionUUID->"1c4a3e98-f900-4f94-aca3-8a7775c959a1"],
Cell[225299, 4950, 529, 12, 26, "Message",ExpressionUUID->"74375e06-fb4c-4192-81d2-1bef5da62d71"]
}, Open  ]],
Cell[225843, 4965, 2220, 65, 49, "Input",ExpressionUUID->"b0660583-1797-46e8-a5f9-881a8b5d3625"],
Cell[CellGroupData[{
Cell[228088, 5034, 549, 15, 29, "Input",ExpressionUUID->"6231d332-b8ff-4fdd-a2cc-c4bafbe3fb2d"],
Cell[228640, 5051, 1038, 19, 26, "Message",ExpressionUUID->"59a3548d-fe06-44a9-a3a6-2088b77954b0"]
}, Open  ]]
}
]
*)

